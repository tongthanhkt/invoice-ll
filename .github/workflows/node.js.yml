name: GitHub Actions Deployment
run-name: ${{ github.actor }} is deploying to production 🚀

on:
  push:
    branches:
      - main

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment:
      name: PRODUCTION

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: 🛎️ Trigger Info
        run: |
          echo "🎉 Triggered by ${{ github.event_name }} on branch ${{ github.ref }}"
          echo "🖥️ Running on ${{ runner.os }} for repo ${{ github.repository }}"

      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 📂 List Files
        run: ls -la

      - name: 📄 Write .env File
        run: |
          cat <<EOF > .env
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          EOF

      - name: 🧹 Clean up Unneeded Files
        run: |
          rm -rf .git .cache node_modules .next

      - name: 🗜️ Zip Project (excluding node_modules, .git, .cache)
        run: |
          zip -r project.zip . -x "node_modules/*" -x ".git/*" -x ".cache/*" -x ".next/*"

      - name: 🔐 Write SSH Private Key to File
        run: |
          echo "${{ secrets.SSH_KEY }}" > private_key
          chmod 600 private_key

      - name: 📤 Upload Archive to Server
        run: |
          scp -i private_key -o StrictHostKeyChecking=no project.zip ubuntu@${{ vars.REMOTE_HOST }}:~/

      - name: 📦 Deploy with Server-side Build & Start
        run: |
          ssh -i private_key -o StrictHostKeyChecking=no ubuntu@${{ vars.REMOTE_HOST }} << 'EOF'
            set -e

            echo "📁 Cleaning and unzipping project"
            rm -rf ~/temp-unzip
            mkdir ~/temp-unzip
            unzip -o ~/project.zip -d ~/temp-unzip

            echo "🔁 Sync to target folder"
            rsync -a --delete ~/temp-unzip/ ~/${{ vars.REMOTE_PATH }}/

            echo "📦 Installing and building on server"
            cd ~/${{ vars.REMOTE_PATH }}
            npm install
            npm run build
          EOF

      - name: ✅ Done
        run: echo "🚀 Deployment completed successfully!"
